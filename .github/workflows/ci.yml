name: Run tests in devcontainer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache Cargo directories
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '.devcontainer/Dockerfile', '.devcontainer/devcontainer.json') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Cache devcontainer image layers
      - name: Cache devcontainer image layers
        uses: actions/cache@v3
        with:
          path: /tmp/devcontainer-cache
          key: ${{ runner.os }}-devcontainer-${{ hashFiles('.devcontainer/Dockerfile', '.devcontainer/devcontainer.json') }}
          restore-keys: |
            ${{ runner.os }}-devcontainer-

      # Run CI inside devcontainer
      - name: Run CI inside devcontainer
        uses: devcontainers/ci@v0.3
        with:
          containerUser: vscode
          imageName: my-devcontainer:ci
          cacheFrom: /tmp/devcontainer-cache
          cacheTo: /tmp/devcontainer-cache
          mount: |
            source=${{ github.workspace }}/.cargo,target=/home/vscode/.cargo,type=bind
            source=${{ github.workspace }}/target,target=/home/vscode/target,type=bind
          runCmd: |
            cargo fmt -- --check
            cargo clippy -- -D warnings
            if ! command -v cargo-llvm-cov &> /dev/null; then
              cargo install cargo-llvm-cov
            fi
            cargo llvm-cov --lcov --output-path lcov.info
            bash <(curl -s https://codecov.io/bash) -f lcov.info